
data Tree['a] = Branch Tree['a], Tree['a]
              | Leaf 'a


let fn fold f, init, xs =
    case xs of Con y, ys -> fold f, (f y, init), ys
             | Nil       -> init

let fn left_most 'a tree : [Tree['a]] -> 'a =
    case tree of Branch left,_ -> left_most left
               | Leaf x        -> x

let fn sum xs = fold (+), 0, xs

