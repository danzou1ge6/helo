data ParseError = ParseError Str,Str

fn parseDigit s =
    case str_head s of
          '0' -> ((str_tail s), Ok 0)
        | '1' -> ((str_tail s), Ok 1)
        | '2' -> ((str_tail s), Ok 2)
        | '3' -> ((str_tail s), Ok 3)
        | '4' -> ((str_tail s), Ok 4)
        | '5' -> ((str_tail s), Ok 5)
        | '6' -> ((str_tail s), Ok 6)
        | '7' -> ((str_tail s), Ok 7)
        | '8' -> ((str_tail s), Ok 8)
        | '9' -> ((str_tail s), Ok 9)
        | _   -> (s, Err ParseError s,"digit")

fn parseInt s,x =
    case parseDigit s of
          (s1, Ok digit) -> parseInt s1,(x *. 10.0 +. int_to_float digit)
        | (s1, Err e   ) -> (s1, x)